package Formula1

//list any import classes here.



//declare any global variables here


import rs.sbnz.book_recommender.model.Book;
import rs.sbnz.book_recommender.model.facts.BookLengthTypeData;
import rs.sbnz.book_recommender.model.facts.SeriesData;
import BookRules.*;

rule "Base formula part 1"
	agenda-group "Level3"
	no-loop
	salience 10
    when
        $bt: BookLengthTypeData(min : minLength,max : maxLength, value: value) and
        $b: Book(pageNum > min, pageNum < max, title : title, avgGrade: getAvgGrade(), brPregleda: brPregleda, numberOfScores: getScore().size(), score: score) @Watch(!systemGrade)
        avgBookGrade(score, $bookGrade;)
        eval($bookGrade != 0)
    then
        modify($b){setSystemGrade(($bookGrade / score.size()) * (1. * numberOfScores / brPregleda) + value)}
end

rule "Base formula part 1 no book scores"
	agenda-group "Level3"
	no-loop
	salience 10
    when
        $bt: BookLengthTypeData(min : minLength,max : maxLength, value: value) and
        $b: Book(pageNum > min, pageNum < max, title : title, avgGrade: getAvgGrade(), brPregleda: brPregleda, numberOfScores: getScore().size(), score: score) @Watch(!systemGrade)
        avgBookGrade(score, $bookGrade;)
        eval($bookGrade == 0)
    then
        modify($b){setSystemGrade(value)}
end

rule "Base formula part 2"
   	agenda-group "Level3"
	no-loop
	salience 9
    when
        $b: Book(seriesNumber > 0, grade: getSystemGrade()) @Watch(!systemGrade)
   	 	$sd: SeriesData(value: value)
    then
        modify($b){setSystemGrade(grade + value)}


end
