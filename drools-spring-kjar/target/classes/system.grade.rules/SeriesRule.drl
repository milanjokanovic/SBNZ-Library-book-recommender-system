package series1

//list any import classes here.

import rs.sbnz.book_recommender.model.Book;
import rs.sbnz.book_recommender.model.facts.SeriesData;

import rs.sbnz.book_recommender.model.facts.GeneralBookData;
import BookRules.*;

//declare any global variables here




rule "Series Rule"
	agenda-group "Level1"
    no-loop
    salience 5
    when
        $b: Book(title : title, avgGrade: getAvgGrade(), brPregleda: brPregleda, seriesNumber > 0, score: score)
        $sd: SeriesData(grade: grade)
        avgBookGrade(score, $bookGrade;)
        eval($bookGrade != 0)
    then
        modify($sd){increaseGrade(($bookGrade / score.size()) * brPregleda)}

end

rule "Series Rule book no scores"
	agenda-group "Level1_5"
    no-loop
    salience 3
    when
        $b: Book(id: id, title : title, avgGrade: getAvgGrade(), brPregleda: brPregleda, seriesNumber > 0, score: score)
        $sd: SeriesData(grade: grade)
        avgBookGrade(score, $bookGrade;)
        eval($bookGrade == 0)
    then
        modify($sd){increaseGrade(0.0 * brPregleda)}
end

rule "General Data Rule"
	agenda-group "Level1"
    no-loop
    salience 3
    when
        $b: Book(title : title, avgGrade: getAvgGrade(), brPregleda: brPregleda, score: score)
        $d: GeneralBookData()
        avgBookGrade(score, $bookGrade;)
        eval($bookGrade != 0)
    then
        modify($d){increaseDataValues(($bookGrade / score.size()), brPregleda)}

end

rule "General Data Rule no book scores"
	agenda-group "Level1_5"
    no-loop
    salience 2
    when
        $b: Book(id: id, title : title, avgGrade: getAvgGrade(), brPregleda: brPregleda, score: score)
        $d: GeneralBookData()
        avgBookGrade(score, $bookGrade;)
        eval($bookGrade == 0)
    then
        modify($d){increaseDataValues(0.0, brPregleda)}
end